version: '3.8'

services:
  mongo1:
    image: mongo:5
    container_name: mongo1
    command: ["--replSet", "myReplicaSet", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'myReplicaSet',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - mongoCluster
    volumes:
      - mongo1:/data/db

  mongo2:
    image: mongo:5
    container_name: mongo2
    command: ["--replSet", "myReplicaSet", "--bind_ip_all", "--port", "27018"]
    ports:
      - 27018:27018
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mongoCluster
    volumes:
      - mongo2:/data/db

  mongo3:
    image: mongo:5
    container_name: mongo3
    command: ["--replSet", "myReplicaSet", "--bind_ip_all", "--port", "27019"]
    ports:
      - 27019:27019
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mongoCluster
    volumes:
      - mongo3:/data/db

  yolo5:
    image: ${YOLO5_IMG_NAME}
    container_name: yolo5
    ports:
      - "8081:8081"
    networks:
      - mongoCluster
    volumes:
      - $HOME/.aws:/root/.aws
    extra_hosts:
      - "host.docker.internal:172.17.0.1"

  polybot:
    image: ${POLYBOT_IMG_NAME}
    ports:
      - "8443:8443"
    container_name: polybot
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - TELEGRAM_APP_URL=${TELEGRAM_APP_URL}
    networks:
      - mongoCluster
    volumes:
      - $HOME/.aws:/root/.aws
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    depends_on:
      - yolo5

networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo1:
  mongo2:
  mongo3:
